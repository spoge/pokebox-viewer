{"version":3,"sources":["components/Cell.tsx","components/PokeBox.tsx","App.tsx","index.tsx"],"names":["Cell","onClick","img","active","className","src","alt","PokeBox","pokeNum","boxNum","Math","ceil","numInBox","r","c","map","column","key","row","n","toString","padStart","App","useState","pokenum","setPokenum","validInput","setValidInput","type","min","max","defaultValue","onChange","e","input","Number","isNaN","number","parseInt","validateThenSetPokenum","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAgBeA,G,MARe,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAAwC,IAA/BC,WAA+B,MAAzB,GAAyB,IAArBC,OAClD,OACE,yBAAKC,UAAW,OAAQH,QAASA,GAC9BC,EAAM,yBAAKG,IAAKH,EAAKI,IAAK,KAAS,QCiC3BC,EArCkB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5BC,EAASC,KAAKC,KAAKH,EAAU,IAC7BI,EAAWJ,EAAU,KAAO,EAAI,GAAKA,EAAU,GAC/CK,EAAIH,KAAKC,KAAKC,EAAW,GACzBE,EAAIF,EAAW,IAAM,EAAI,EAAIA,EAAW,EAI9C,OACE,6BACE,yBAAKR,UAAU,aAAf,QAAiCK,GACjC,yBAAKL,UAAU,OACZ,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGW,KAAI,SAACC,GAAD,OACrB,yBAAKC,IAAKD,GACP,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGD,KAAI,SAACG,GAAD,OAClB,kBAAC,EAAD,CACED,IAAKC,EACLhB,IACEW,IAAMK,GAAOJ,IAAME,EAAnB,iDAdIG,EAgBEX,EAhBYW,EAAEC,WAAWC,SAAS,EAAG,MAc3C,QAII,KAlBD,IAACF,cC6BXG,EAtCO,WAAO,IAAD,EACIC,mBAAS,GADb,mBACnBC,EADmB,KACVC,EADU,OAEUF,oBAAS,GAFnB,mBAEnBG,EAFmB,KAEPC,EAFO,KAc1B,OACE,yBAAKvB,UAAU,OACb,yDACA,6BACE,kBAAC,EAAD,CAASI,QAASgB,IAClB,6BACE,8CACA,2BACEpB,UAAU,cACVwB,KAAK,SACLC,IAAK,EACLC,IAAK,IACLC,aAAcP,EACdQ,SAAU,SAACC,GAAD,OAxBW,SAACC,GAC9B,IAAKC,OAAOC,MAAMF,GAAQ,CACxB,IAAMG,EAASF,OAAOG,SAASJ,GAC/B,GAAIG,GAAU,GAAKA,GAAU,IAG3B,OAFAZ,EAAWY,QACXV,GAAc,GAIlBA,GAAc,GAeWY,CAAuBN,EAAEO,OAAOC,WAGrD,yBAAKrC,UAAU,qBACZsB,EAAa,IAAM,gCC9B9BgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.72983891.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface Props {\r\n  active?: boolean;\r\n  img?: string;\r\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\r\n}\r\n\r\nconst Cell: React.FC<Props> = ({ onClick, img = \"\", active = false }) => {\r\n  return (\r\n    <div className={\"cell\"} onClick={onClick}>\r\n      {img ? <img src={img} alt={\"\"} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\n\r\ninterface Props {\r\n  pokeNum: number;\r\n}\r\n\r\nconst PokeBox: React.FC<Props> = ({ pokeNum }) => {\r\n  const boxNum = Math.ceil(pokeNum / 30);\r\n  const numInBox = pokeNum % 30 === 0 ? 30 : pokeNum % 30;\r\n  const r = Math.ceil(numInBox / 6);\r\n  const c = numInBox % 6 === 0 ? 6 : numInBox % 6;\r\n\r\n  const minThreeDigits = (n: number) => n.toString().padStart(3, \"0\");\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"box-label\">Box: {boxNum}</div>\r\n      <div className=\"box\">\r\n        {[\r\n          [1, 2, 3, 4, 5, 6].map((column) => (\r\n            <div key={column}>\r\n              {[\r\n                [1, 2, 3, 4, 5].map((row) => (\r\n                  <Cell\r\n                    key={row}\r\n                    img={\r\n                      r === row && c === column\r\n                        ? `https://serebii.net/pokedex-swsh/icon/${minThreeDigits(\r\n                            pokeNum\r\n                          )}.png`\r\n                        : \"\"\r\n                    }\r\n                  />\r\n                )),\r\n              ]}\r\n            </div>\r\n          )),\r\n        ]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokeBox;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport PokeBox from \"./components/PokeBox\";\n\nconst App: React.FC = () => {\n  const [pokenum, setPokenum] = useState(1);\n  const [validInput, setValidInput] = useState(true);\n  const validateThenSetPokenum = (input: string) => {\n    if (!Number.isNaN(input)) {\n      const number = Number.parseInt(input);\n      if (number >= 1 && number <= 893) {\n        setPokenum(number);\n        setValidInput(true);\n        return;\n      }\n    }\n    setValidInput(false);\n  };\n  return (\n    <div className=\"app\">\n      <h2>Pokémon Box Calculator</h2>\n      <div>\n        <PokeBox pokeNum={pokenum} />\n        <div>\n          <span>Pokédex #</span>\n          <input\n            className=\"input-field\"\n            type=\"number\"\n            min={1}\n            max={893}\n            defaultValue={pokenum}\n            onChange={(e) => validateThenSetPokenum(e.target.value)}\n          />\n        </div>\n        <div className=\"input-error-label\">\n          {validInput ? \" \" : \"Invalid Pokédex number\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}